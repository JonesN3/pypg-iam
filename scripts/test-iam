#!/bin env python3

from sqlalchemy import create_engine
from sqlalchemy.pool import QueuePool

from iam.pgiam import Db


def test_pgiam():
    user = 'tsd_backend_utv_user'
    pw = ''
    host = 'localhost'
    db = 'tsd_idp'
    dburi = ''.join(['postgresql://', user, ':', pw, '@', host, ':5432/', db])
    engine = create_engine(dburi, poolclass=QueuePool)
    db = Db(engine)
    print(type(db.tables.persons))
    pid = db.exec_sql('select person_id from persons limit 1', {})[0][0]
    print(pid)
    print(db.person_groups(pid))
    print(db.person_capabilities(pid))
    print(db.person_access(pid))
    user_name = db.exec_sql('select user_name from users where person_id=:pid', {'pid': pid})[0][0]
    print(db.user_groups(user_name))
    print(db.user_capabilities(user_name))
    print(db.group_members('p11-export-group'))
    print(db.group_moderators('p11-export-group'))
    print(db.group_member_add('p11-admin-group', 'p11-clinical-group'))
    print(db.group_member_remove('p11-admin-group', 'p11-clinical-group'))
    print(db.group_capabilities('p11-admin-group'))
    print(db.capability_grants('admin'))


if __name__ == '__main__':
    test_pgiam()
